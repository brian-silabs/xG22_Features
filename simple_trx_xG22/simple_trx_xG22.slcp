# Silicon Labs Project Configuration Tools: slcp, v0, Component selection file.
project_name: simple_trx_xG22
label: simple_trx_xG22
description: |-
  This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED0 will toggle on message send and LED1 will toggle on message receive. CLI can also be used for sending and showing received messages. To send enter 'tx' or 'send'. By default the received packets will be printed out in terminal, to enable or disable print enter 'rx 1' ('receive 1') or 'rx 0' ('receive 0') in terminal. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported.
  NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, an USB power bank can be used if portability is needed.
category: RAIL Examples
package: Flex
quality: production
source:
- {path: main.c}
- {path: app_init.c}
- {path: app_process.c}
- {path: app_cli.c}
include:
- path: ''
  file_list:
  - {path: app_init.h}
  - {path: app_process.h}
sdk: {id: gecko_sdk, version: 3.2.1}
toolchain_settings:
- {value: debug, option: optimize}
component:
- {id: sl_flex_restrictions_wisun}
- {id: sl_flex_restrictions_long_range}
- {id: radio_config_simple_rail_singlephy}
- {id: sl_system}
- instance: [btn0, btn1]
  id: simple_button
- {id: brd4182a_b03}
- {id: brd4001a}
- {id: sl_flex_restrictions_base}
- {id: mpu}
- instance: [inst0]
  id: rail_util_init
- instance: [led0, led1]
  id: simple_led
- {id: sl_flex_restrictions_connect}
- {id: EFR32MG22C224F512IM40}
- {id: sl_simple_rail_stub}
- {id: device_init}
- {id: rail_util_recommended}
template_contribution:
- name: cli_command
  priority: 0
  value: {name: info, handler: cli_info, help: Unique ID of the MCU}
- name: cli_command
  priority: 0
  value: {name: send, handler: cli_send_packet, help: Send a packet}
- name: cli_command
  priority: 0
  value:
    name: receive
    handler: cli_receive_packet
    help: Turn ON/OFF received message forwarding on CLI
    argument:
    - {type: uint8, help: ON/OFF}
requires:
- {name: a_radio_config}
- condition: [kernel]
  name: sl_simple_rail_os
configuration:
- {name: SL_STACK_SIZE, value: '2048'}
- {name: SL_HEAP_SIZE, value: '2048'}
- {name: configMINIMAL_STACK_SIZE, value: '1024'}
- {name: SL_RAIL_UTIL_INIT_INIT_COMPLETE_CALLBACK_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_RADIO_CONFIG_SUPPORT_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_PROTOCOLS_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_PROTOCOL_INST0_DEFAULT, value: SL_RAIL_UTIL_PROTOCOL_PROPRIETARY}
- {name: SL_RAIL_UTIL_INIT_TRANSITIONS_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_TRANSITION_INST0_TX_SUCCESS, value: RAIL_RF_STATE_RX}
- {name: SL_RAIL_UTIL_INIT_TRANSITION_INST0_TX_ERROR, value: RAIL_RF_STATE_RX}
- {name: SL_RAIL_UTIL_INIT_TRANSITION_INST0_RX_SUCCESS, value: RAIL_RF_STATE_RX}
- {name: SL_RAIL_UTIL_INIT_TRANSITION_INST0_RX_ERROR, value: RAIL_RF_STATE_RX}
- {name: SL_RAIL_UTIL_INIT_DATA_FORMATS_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENTS_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_RX_PREAMBLE_LOST_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_RX_PACKET_RECEIVED_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_RX_ADDRESS_FILTERED_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_RX_FRAME_ERROR_INST0_ENABLE, value: '0'}
- {name: SL_RAIL_UTIL_INIT_EVENT_RX_PACKET_ABORTED_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_TX_PACKET_SENT_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_TX_ABORTED_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_TX_BLOCKED_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_RX_FIFO_OVERFLOW_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_TX_UNDERFLOW_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_TX_CHANNEL_BUSY_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_RX_TX_SCHEDULED_RX_TX_STARTED_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_RX_SCHEDULED_RX_MISSED_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_TX_SCHEDULED_TX_MISSED_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_CONFIG_UNSCHEDULED_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_CONFIG_SCHEDULED_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_SCHEDULER_STATUS_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_CAL_NEEDED_INST0_ENABLE, value: '1'}
- condition: [iostream_usart]
  name: SL_BOARD_ENABLE_VCOM
  value: '1'
- {name: SL_CLI_LOCAL_ECHO, value: (1)}
- {name: SL_IOSTREAM_USART_VCOM_CONVERT_BY_DEFAULT_LF_TO_CRLF, value: (1)}
- condition: [iostream_usart]
  name: SL_IOSTREAM_USART_VCOM_FLOW_CONTROL_TYPE
  value: usartHwFlowControlNone
- {name: APP_LOG_PREFIX_ENABLE, value: '0'}
ui_hints:
  highlight:
  - {path: config/rail/radio_settings.radioconf, focus: true}

